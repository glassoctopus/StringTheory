import { clientCredentials } from '../utils/client';
import 'firebase/database';

// API CALLS FOR Posts

const endpoint = clientCredentials.databaseURL;

const getSinglePost = (PostId) => new Promise((resolve, reject) => {
  fetch(`${endpoint}/posts/${PostId}.json`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
    .then((response) => response.json())
    .then((data) => resolve(data))
    .catch(reject);
});

const getPostsByUser = (uid) => new Promise((resolve, reject) => {
  fetch(`${endpoint}/posts.json?orderBy="thePostersId"&equalTo="${uid}"`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
    .then((response) => response.json())
    .then((data) => resolve(Object.values(data)))
    .catch(reject);
});

const getAllPosts = () => new Promise((resolve, reject) => {
  fetch(`${endpoint}/posts.json`, {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  })
    .then((response) => response.json())
    .then((data) => resolve(Object.values(data)))
    .catch(reject);
});

const deletePost = (PostId) => new Promise((resolve, reject) => {
  fetch(`${endpoint}/posts/${PostId}.json`, {
    method: 'DELETE',
    headers: {
      'Content-Type': 'application/json',
    },
  })
    .then((response) => response.json())
    .then((data) => resolve((data)))
    .catch(reject);
});

const createPost = (payload) => new Promise((resolve, reject) => {
  fetch(`${endpoint}/posts.json`, {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(payload),
  })
    .then((response) => response.json())
    .then((data) => resolve(data))
    .catch(reject);
});

const updatePost = (payload) => new Promise((resolve, reject) => {
  fetch(`${endpoint}/posts/${payload.postId}.json`, {
    method: 'PATCH',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(payload),
  })
    .then((response) => response.json())
    .then((data) => resolve(data))
    .catch(reject);
});

export {
  getSinglePost,
  getPostsByUser,
  getAllPosts,
  deletePost,
  createPost,
  updatePost,
};
